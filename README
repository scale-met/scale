SCALE
=========

SCALE (Scalable Computing for Advanced Library and Environment), which stands for Scalable Computing for Advanced Library and Environment, is a basic library for weather and climate model of the earth and planets aimed to be widely used in various models.
The SCALE library is developed with co-design by researchers of computational science and computer science.
(http://scale.aics.riken.jp/)


Contributing
------------
SCALE is developed by Team SCALE.

License
-------
- License: The BSD 2-Clause License

Build
-----
- set SCALE_SYS environmental variable (see the sysdef directory)
 % SCALE_SYS=Linux64-gnu-ompi (example)

- build the execution binary files in the directory of the test cases of scale-rm
 e.g.,
 % cd rootdir/scale-rm/src/
 % make

- generate the initial files and run the integration
 e.g.,
 % cd rootdir/scale-rm/test/tutorial/ideal
 % ln -s ../../../../bin/scale-rm_init ./
 % mpirun -n 2 ./scale-rm_init init_R20kmDX500m.conf
 % ln -s ../../../../bin/scale-rm      ./
 % mpirun -n 2 ./scale-rm run_R20kmDX500m.conf


Available Option List
-----
- Switches
You can enable options below by setting as environment variables, for example,
 % export OPTION_NAME=T
Switch options will be activated only when the value is "T"

* ENABLE_FIXEDINDEX : fix size of horizontal/vertical grids （inc_index.h is required, see scalelib/include/inc_index.h.sample）
* AGGRESSIVE : enable aggressive optimization on the K computer
* DEBUG : enable debug mode
* IGNOREDEP : avoid checking of source dependency at the time of compile
* NOINIT : skip making scale-rm_pp, scale-rm_init
* NOMPI : compile without using MPI library (only for util tools)
* CHECK_MASS : calculate and check total mass in dynamical core (for debug)
* RDMA : (obsolete) : use special routine of RDMA communication on the K computer
* ENABLE_PAPI : enable using PAPI (library is required)
* USE_NETCDF3 : use NetCDF3 instead of NetCDF4
* ENABLE_PNETCDF: enable using parallel-netCDF

- Fixed component
You can fix several model component at the time of compile.
 % export COMPONENT_NAME=XXX

The list of COMPONENT_NAME is following:

* TRACER
* MP
* RD
* TB
* AE
* AETRACER
