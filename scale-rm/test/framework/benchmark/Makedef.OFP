################################################################################
#
# ------ For Linux64 & intel fortran&C & intel mpi -----
#
################################################################################

##### Fortran setting
#FFLAGS is set in Mkinclude. FFLAGS_DEBUG is used if SCALE_DEBUG=T

FC  = mpiifort
SFC = ifort
MODDIROPT = -module

FFLAGS_FAST  = -fpp -m64 -O3 -xMIC-AVX512           \
               -assume byterecl -convert big_endian \
               -fp-model fast=2 -align array64byte  \
               -qopt-streaming-stores always        \
               -static_intel

FFLAGS_QUICKDEBUG = $(FFLAGS_FAST) -traceback -fpe0 -CB -CU

FFLAGS_DYN   = $(FFLAGS)

FFLAGS_DEBUG = -fpp -m64 -O0 -xMIC-AVX512                \
               -assume byterecl -convert big_endian      \
               -fpe0 -fp-model source -align array64byte \
               -qopt-streaming-stores always             \
               -static_intel                             \
               -check bounds -warn all -g -traceback     \
               -assume nobuffered_io

##### C setting
#CFLAGS is set in Mkinclude. CFLAGS_DEBUG is used if SCALE_DEBUG=T

CC = mpiicc

CFLAGS_FAST  = -O3 -xMIC-AVX512
CFLAGS_DEBUG = -O0 -xMIC-AVX512



##### Special setting

FFLAGS_OPENMP = -qopenmp -no-heap-arrays

FFLAGS_SYSDEPEND = $(OMP)
CFLAGS_SYSDEPEND = $(OMP)

FFLAGS_TENTATIVE = -no-ip -no-ipo

##### Linker setting

LD      = $(FC)
LDFLAGS = $(FFLAGS)



################################################################################

###### NetCDF library
SCALE_NETCDF_INCLUDE ?= -I/work/opt/local/apps/intel/2017.1.132/netcdf-fortran/4.4.3/include -I/work/opt/local/apps/intel/2017.1.132/hdf5/1.8.17/include -I/work/opt/local/apps/intel/2017.1.132/netcdf/4.4.1/include
SCALE_NETCDF_LIBS    ?= -L/work/opt/local/apps/intel/2017.1.132/netcdf-fortran/4.4.3/lib -lnetcdff -L/work/opt/local/apps/intel/2017.1.132/hdf5/1.8.17/lib -L/work/opt/local/apps/intel/2017.1.132/netcdf/4.4.1/lib -lnetcdf -lhdf5_hl -lhdf5 -lnetcdf -lz

###### Math library
SCALE_MATHLIB_LIBS   ?= -mkl=sequential

##### for frontend
INSTALL = install
AR      = ar
ARFLAGS = r
RANLIB  = ranlib
JOBSUB  = pjsub
