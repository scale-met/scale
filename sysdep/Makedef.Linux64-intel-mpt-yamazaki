#
# ------ FOR Linux 64bit & intel fortran&C & SGI-mpt -----
#

##### for computation

FFLAGS_FAST  = -fpp -m64 -O3 -xHost                 \
               -assume byterecl -convert big_endian \
               -fp-model source                     \
               -mcmodel=medium -heap-arrays         \
               -shared-intel

FFLAGS_DEBUG = -fpp -m64 -O0                        \
               -assume byterecl -convert big_endian \
               -fpe0 -fp-model source               \
               -check all -CB -CU -C -warn all -g -traceback   \
               -mcmodel=medium -heap-arrays         \
               -shared-intel                        \
               -assume nobuffered_io                \
               -DDEBUG

FC     = mpif90
#FFLAGS = $(FFLAGS_FAST)
FFLAGS = $(FFLAGS_DEBUG)

FFLAGS_DYN ?= $(FFLAGS)

ifneq ($(DISABLE_VEC),)
      FFLAGS += -no-vec
endif
ifneq ($(ENABLE_OPENMP),)
      FFLAGS += -openmp -openmp-report
endif
ifneq ($(ENABLE_PAPI),)
      FFLAGS += -D_PAPI_
      PAPI_INCLUDE = -I$(PAPI)/include
      PAPI_LIBS    = -L$(PAPI)/lib -lpapi
endif

MODDIROPT ?= -module

CC     = mpicc
CFLAGS = -O3 -xHost -mcmodel=medium -shared-intel

LD      = $(FC)
LDFLAGS = $(FFLAGS)

###### NetCDF library
#NETCDF_INCLUDE ?= -I$(NETCDF4)/include
NETCDF_INCLUDE ?= -I/data/opt/netcdf/4.3.2_intel/include -I/data/opt/netcdf-fortran/4.4.1_intel/include
#NETCDF_LIBS    ?= -L$(NETCDF4)/lib -L$(HDF5)/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lm -lz
NETCDF_LIBS    ?= -L/data/opt/netcdf/4.3.2_intel/lib -L/data/opt/netcdf-fortran/4.4.1_intel/lib -L/data/opt/hdf5/1.8.14_intel/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lm -lz

###### Lapack
LAPACK_LIBS    ?= -mkl=sequential

##### for frontend
INSTALL = install
AR      = ar
ARFLAGS = r
RANLIB  = ranlib
JOBSUB  = qsub
